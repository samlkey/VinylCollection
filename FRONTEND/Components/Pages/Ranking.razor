@page "/ranking"
@rendermode InteractiveServer
@using FRONTEND.Services
@using FRONTEND.Data
@using FRONTEND.Components.Shared
@inject IVinylService VinylService

<div class="container">
    <Search />
    <div class="albums-grid">
        <div>
            @for (int i = 0; i < albums.Count; i++)
            {
                var album = albums[i];
                <div class="album-card">
                    <img src="@album.ImgSrc" alt="@album.Name" class="album-art">
                    <div class="album-info">
                        <div class="album-credits">
                            <h3>@album.Name</h3>
                            <p class="artist">@album.Artist</p>
                        </div>
                        <p class="rating">@album.GetStars(album.Rating)</p>
                    </div>
                </div>
            }
        </div>
        <div>
            <h1>Show top3 maybe?</h1>
        </div>
    </div>
</div>

@code {
    private List<Album> albums = new List<Album>();

    protected override async Task OnInitializedAsync() {
        albums = await VinylService.GetAllAlbumsAsync(); 
        albums = albums.OrderByDescending(a => a.Rating).ToList();
    }

    string GetOrdinal(int number)
    {
        if (number <= 0) return number.ToString();
        int rem100 = number % 100;
        if (rem100 >= 11 && rem100 <= 13) return number + "th";
        switch (number % 10)
        {
            case 1: return number + "st";
            case 2: return number + "nd";
            case 3: return number + "rd";
            default: return number + "th";
        }
    }
}    